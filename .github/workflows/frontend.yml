name: Frontend
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

defaults:
  run:
    working-directory: frontend/frontend-chatapp

jobs:
  Dependencies:
    runs-on: ubuntu-latest
    container: node:21.5.0-bullseye-slim
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-cache
      - if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline

  Lint:
    needs: [Dependencies]
    runs-on: ubuntu-latest
    container: node:21.5.0-bullseye-slim
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock', '**/package.json') }}

      - run: yarn install --prefer-offline
      - run: yarn lint

  Style:
    needs: [Dependencies]
    runs-on: ubuntu-latest
    container: node:21.5.0-bullseye-slim
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock', '**/package.json') }}

      - run: yarn install --prefer-offline
      - run: yarn prettier-check
